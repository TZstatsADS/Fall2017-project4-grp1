dataset1_train <- read.csv("../data/data_sample/eachmovie_sample/data_train.csv")
Transformer <- function(data.set){
columns.data <- sort(unique(data.set$Movie))
rows.data <- sort(unique(data.set$User))
Table_ <- matrix(0,nrow = length(rows.data), ncol = length(columns.data))
for(i in 1:length(columns.data)){
col.name <- columns.data[i]
index <- which(data.set$Movie == col.name)
scores <- data.set[index,4] #Scores
users <- data.set[index,3] #Users
index2 <- which(rows.data %in% users)
Table_[index2,i] = scores
Table_[!index2,i] = 0
}
colnames(Table_) <- columns.data
rownames(Table_) <- rows.data
return(Table_)
}
Table_1 <- Transformer(dataset1_train)
try1 = cor(t(Table_1),method = 'pearson')
dataset1_train <- read.csv("../data/data_sample/eachmovie_sample/data_train.csv")
Transformer <- function(data.set){
columns.data <- sort(unique(data.set$Movie))
rows.data <- sort(unique(data.set$User))
Table_ <- matrix(0,nrow = length(rows.data), ncol = length(columns.data))
for(i in 1:length(columns.data)){
col.name <- columns.data[i]
index <- which(data.set$Movie == col.name)
scores <- data.set[index,4] #Scores
users <- data.set[index,3] #Users
index2 <- which(rows.data %in% users)
Table_[index2,i] = scores
Table_[!index2,i] = 0
}
colnames(Table_) <- columns.data
rownames(Table_) <- rows.data
return(Table_)
}
Table_1 <- Transformer(dataset1_train)
r_i <- mat[1, ]
r_i <- Table_1[1, ]
which(r_i == 0 )
?intersect
length(which(r_i == 0 ))
significance_weight_assign <- function(i, j, mat=Table_1, not_rate = 0 ){
r_i <- mat[i, ]
r_j <- mat[j, ]
n <- length(intersect(which(r_i == 0), which(r_j == 0)))
if (n >= 50){
return(1)
}
else {
return(n/50)
}
}
significance_weight_assign(1, 2)
significance_weight_assign(1, 3)
significance_weight_assign(1, 4)
significance_weight_assign(2, 456)
significance_weight_assign(2, 658)
a <- mat(nrow=2, ncol=2)
a <- matrix(nrow=2, ncol=2)
a
matrix(1, nrow=2, ncol=2)
dim(Table_1)
?Sys.time
print(Sys.time())
significance_weight_assign <- function(i, j, mat=Table_1, not_rate = 0 ){
r_i <- mat[i, ]
r_j <- mat[j, ]
n <- length(intersect(which(r_i == 0), which(r_j == 0)))
if (n >= 50){
return(1)
}
else {
return(n/50)
}
}
significance_weight_matrix <- function(mat_dim_1, mat = Table_1){
mat_weight = matrix(1, nrow=mat_dim_1, ncol=mat_dim_1)
for (i in 1:mat_dim_1){
print(i)
print(Sys.time())
for (j in (i+1):mat_dim_1){
weight <- significance_weight_assign(i, j, mat=mat)
mat_weight[i, j] <- weight
mat_weight[j, i] <- weight
}
}
return(mat_weight)
}
mat_weight <- significance_weight_matrix(dim(Table_1)[1], mat = Table_1)
mat_weight[100, :]
mat_weight[100, ]
dataset1_train <- read.csv("../data/data_sample/eachmovie_sample/data_train.csv")
Transformer <- function(data.set){
columns.data <- sort(unique(data.set$Movie))
rows.data <- sort(unique(data.set$User))
Table_ <- matrix(0,nrow = length(rows.data), ncol = length(columns.data))
for(i in 1:length(columns.data)){
col.name <- columns.data[i]
index <- which(data.set$Movie == col.name)
scores <- data.set[index,4] #Scores
users <- data.set[index,3] #Users
index2 <- which(rows.data %in% users)
Table_[index2,i] = scores
Table_[!index2,i] = 0
}
colnames(Table_) <- columns.data
rownames(Table_) <- rows.data
return(Table_)
}
Table_1 <- Transformer(dataset1_train)
significance_weight_assign <- function(i, j, mat=Table_1, not_rate = 0 ){
r_i <- mat[i, ]
r_j <- mat[j, ]
n <- length(intersect(which(r_i == 0), which(r_j == 0)))
if (n >= 50){
return(1)
}
else {
return(n/50)
}
}
significance_weight_matrix <- function(mat_dim_1, mat = Table_1){
mat_weight = matrix(1, nrow=mat_dim_1, ncol=mat_dim_1)
for (i in 1:mat_dim_1){
print(i)
print(Sys.time())
for (j in (i+1):mat_dim_1){
weight <- significance_weight_assign(i, j, mat=mat)
mat_weight[i, j] <- weight
mat_weight[j, i] <- weight
}
}
return(mat_weight)
}
#mat_weight <- significance_weight_matrix(dim(Table_1)[1], mat = Table_1)
significance_weight_assign(100, 203)
significance_weight_assign(100, 24)
significance_weight_assign(100, 100)
significance_weight_assign(101, 200)
significance_weight_assign(101, 203)
significance_weight_assign(101, 204)
significance_weight_assign <- function(i, j, mat=Table_1, not_rate = 0 ){
r_i <- mat[i, ]
r_j <- mat[j, ]
n <- length(intersect(which(r_i != 0), which(r_j != 0)))
if (n >= 50){
return(1)
}
else {
return(n/50)
}
}
significance_weight_matrix <- function(mat_dim_1, mat = Table_1){
mat_weight = matrix(1, nrow=mat_dim_1, ncol=mat_dim_1)
for (i in 1:mat_dim_1){
print(i)
print(Sys.time())
for (j in (i+1):mat_dim_1){
weight <- significance_weight_assign(i, j, mat=mat)
mat_weight[i, j] <- weight
mat_weight[j, i] <- weight
}
}
return(mat_weight)
}
#mat_weight <- significance_weight_matrix(dim(Table_1)[1], mat = Table_1)
significance_weight_assign(1, 3)
significance_weight_assign(1, 5)
significance_weight_assign <- function(i, j, mat=Table_1, not_rate = 0 ){
r_i <- mat[i, ]
r_j <- mat[j, ]
n <- length(intersect(which(r_i != 0), which(r_j != 0)))
if (n >= 50){
return(1)
}
else {
return(n/50)
}
}
significance_weight_matrix <- function(mat_dim_1, mat = Table_1){
mat_weight = matrix(1, nrow=mat_dim_1, ncol=mat_dim_1)
for (i in 1:mat_dim_1){
for (j in (i+1):mat_dim_1){
weight <- significance_weight_assign(i, j, mat=mat)
print(weight)
mat_weight[i, j] <- weight
mat_weight[j, i] <- weight
}
}
return(mat_weight)
}
mat_weight <- significance_weight_matrix(dim(Table_1)[1], mat = Table_1)
?var
var(c(1,2,3))
var(c(1,2,3,4))
var(c(1,2,3,4,5))
?tapply
?apply
find_var <- function(mat=Table_1){
var_vector <- apply(Table_1, 1, var)
}
variance_weight_assign <- function(i, j, mat=Table_1){
}
find_var()
var_vector <- find_var()
c(1,2,c(3,4))
c(1,2,c(3,4))
list(1,2, c(1,2))
find_var <- function(mat=Table_1){
var_vector <- apply(Table_1, 1, var)
var_max <- max(var_vector)
var_min <- min(var_vector)
return(list(var_max, var_min, var_vector))
}
variance_weight_assign <- function(i, j, mat=Table_1){
}
find_var()
find_var()[[1]]
find_var()[[2]]
?type
typeof(find_var()[[3]])
find_var()[[3]]
length(find_var()[[3]])
find_var <- function(mat=Table_1){
var_vector <- apply(Table_1, 2, var)
var_max <- max(var_vector)
var_min <- min(var_vector)
return(list(var_max, var_min, var_vector))
}
variance_weight_assign <- function(i, j, mat=Table_1){
}
find_var()
find_var()[[3]]
length(find_var()[[3]])
(c(1,2,4) - 3)/6
find_var <- function(mat=Table_1){
var_vector <- apply(Table_1, 2, var)
var_max <- max(var_vector)
var_min <- min(var_vector)
v <- (var_vector - var_min)/var_max
return(v)
}
variance_weight_assign <- function(i, j, mat=Table_1){
}
length(find_var())
sum(c(1,2))
scale(c(1,2,3))
scale(c(1,2,3))[1]
scale(c(1,2,3))[2]
scale(c(1,2,3))[3]
?scale
scale(Table_1[1, ])
c(1,2)*c(3,4)
find_var <- function(mat=Table_1){
var_vector <- apply(Table_1, 2, var)
var_max <- max(var_vector)
var_min <- min(var_vector)
v <- (var_vector - var_min)/var_max
return(v)
}
variance_weight_assign <- function(i, j, v){
r_i <- scale(mat[i, ])
r_j <- scale(mat[j, ])
weight <- sum(v*r_i*r_j)/sum(v)
return(weight)
}
variance_weight_matrix <- function(mat_dim_1, mat = Table_1){
mat_weight = matrix(1, nrow=mat_dim_1, ncol=mat_dim_1)
v <- find_var(mat = mat)
for (i in 1:mat_dim_1){
for (j in (i+1):mat_dim_1){
weight <- variance_weight_assign(i, j, v)
print(weight)
mat_weight[i, j] <- weight
mat_weight[j, i] <- weight
}
}
return(mat_weight)
}
mat_variance_weight <- variance_weight_matrix(dim(Table_1)[1], mat = Table_1)
find_var <- function(mat=Table_1){
var_vector <- apply(Table_1, 2, var)
var_max <- max(var_vector)
var_min <- min(var_vector)
v <- (var_vector - var_min)/var_max
return(v)
}
variance_weight_assign <- function(i, j, v, mat=Table_1){
r_i <- scale(mat[i, ])
r_j <- scale(mat[j, ])
weight <- sum(v*r_i*r_j)/sum(v)
return(weight)
}
variance_weight_matrix <- function(mat_dim_1, mat = Table_1){
mat_weight = matrix(1, nrow=mat_dim_1, ncol=mat_dim_1)
v <- find_var(mat = mat)
for (i in 1:mat_dim_1){
for (j in (i+1):mat_dim_1){
weight <- variance_weight_assign(i, j, v, mat = Table_1)
print(weight)
mat_weight[i, j] <- weight
mat_weight[j, i] <- weight
}
}
return(mat_weight)
}
mat_variance_weight <- variance_weight_matrix(dim(Table_1)[1], mat = Table_1)
find_var <- function(mat=Table_1){
var_vector <- apply(Table_1, 2, var)
var_max <- max(var_vector)
var_min <- min(var_vector)
v <- (var_vector - var_min)/var_max
return(v)
}
variance_weight_assign <- function(i, j, v, mat=Table_1){
r_i <- scale(mat[i, ])
r_j <- scale(mat[j, ])
weight <- sum(v*r_i*r_j)/sum(v)
return(weight)
}
variance_weight_matrix <- function(mat_dim_1, mat = Table_1){
mat_weight = matrix(1, nrow=mat_dim_1, ncol=mat_dim_1)
v <- find_var(mat = mat)
for (i in 1:mat_dim_1){
print(i)
print(Sys.time())
for (j in (i+1):mat_dim_1){
weight <- variance_weight_assign(i, j, v, mat = Table_1)
print(weight)
mat_weight[i, j] <- weight
mat_weight[j, i] <- weight
}
}
return(mat_weight)
}
mat_variance_weight <- variance_weight_matrix(dim(Table_1)[1], mat = Table_1)
find_var <- function(mat=Table_1){
var_vector <- apply(Table_1, 2, var)
var_max <- max(var_vector)
var_min <- min(var_vector)
v <- (var_vector - var_min)/var_max
return(v)
}
variance_weight_assign <- function(i, j, v, mat=Table_1){
r_i <- scale(mat[i, ])
r_j <- scale(mat[j, ])
weight <- sum(v*r_i*r_j)/sum(v)
return(weight)
}
variance_weight_matrix <- function(mat_dim_1, mat = Table_1){
mat_weight = matrix(1, nrow=mat_dim_1, ncol=mat_dim_1)
v <- find_var(mat = mat)
for (i in 1:mat_dim_1){
print(i)
print(Sys.time())
for (j in (i+1):mat_dim_1){
weight <- variance_weight_assign(i, j, v, mat = Table_1)
mat_weight[i, j] <- weight
mat_weight[j, i] <- weight
}
}
return(mat_weight)
}
mat_variance_weight <- variance_weight_matrix(dim(Table_1)[1], mat = Table_1)
